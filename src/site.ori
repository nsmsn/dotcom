{
  blank.html = "This page intentionally left blank."

  assets

  img

  library.html = templates/library.ori(data/library.json)

  posts = {
    ...Tree.map(data/posts.ori, templates/post.ori)
    index.html = templates/posts-index.ori(data/posts.ori)
    feed.json = Tree.json(feed-posts.ori(data/posts.ori))
    feed.xml = Origami.rss(feed-posts.ori(data/posts.ori))
  }

  notes = {
    ...Tree.map(data/notes.ori, templates/note.ori)
    (noteSets) = Tree.paginate(data/notes.ori, 10)
    pages/ = Tree.map(noteSets, {
      extension: "->.html"
      value: templates/notes-index.ori
    })
    index.html = pages/1.html
    feed.json = Tree.json(feed-notes.ori(data/notes.ori))
    feed.xml = Origami.rss(feed-notes.ori(data/notes.ori))
  }

  tags = {
    ...Tree.map(data/tags.ori, {
      key: (items, tag) => `${ Origami.slug(tag) }.html`
      value: templates/tag.ori
    })
    index.html = templates/tags-index.ori(data/tags.ori)
  }

  vinyl.html = templates/vinyl.ori(data/vinyl.json)

  work/ = Tree.map(Tree.map(./work, mdHtml), templates/page.ori)

  index.html = templates/index.ori(
    Tree.first(data/posts.ori)
    Tree.take(data/notes.ori, 3)
  )

  ...Tree.map(Tree.map(<slash>, mdHtml), templates/page.ori)

  feed.json = Tree.json(feed.ori(data/combined.ori))
  feed.xml = Origami.rss(feed.ori(data/combined.ori))

  _redirects
  favicon.ico
  humans.txt
  robots.txt 

  search.html = templates/search.ori/
}

// Only build each page once
→ (site) => Tree.cache(site)

// Use the pages to make both the site and the search index
→ (cached) => {
    ...cached
    pagefind/ = Origami.once(() => package:@weborigami/pagefind(cached))
  }